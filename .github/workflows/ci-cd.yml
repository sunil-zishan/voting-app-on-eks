name: Voting App Production Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      REGISTRY: docker.io
      IMAGE_PREFIX: sunilzishan
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push vote image
        uses: docker/build-push-action@v4
        with:
          context: ./vote
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/voting-app:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push result image
        uses: docker/build-push-action@v4
        with:
          context: ./result
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/result-app:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push worker image
        uses: docker/build-push-action@v4
        with:
          context: ./worker
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/worker-app:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-west-1

      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig
        run: eksctl utils write-kubeconfig --cluster sunil-voting-app-cluster --region ca-west-1

      - name: Update image tags in manifests
        run: |
          sed -i "s|sunilzishan/voting-app:.*|sunilzishan/voting-app:${{ env.IMAGE_TAG }}|g" k8s/vote/vote-deployment.yaml
          sed -i "s|sunilzishan/result-app:.*|sunilzishan/result-app:${{ env.IMAGE_TAG }}|g" k8s/result/result-deployment.yaml
          sed -i "s|sunilzishan/worker-app:.*|sunilzishan/worker-app:${{ env.IMAGE_TAG }}|g" k8s/worker/worker-deployment.yaml

      - name: Apply Kubernetes manifests
        run: kubectl apply -R -f k8s/
